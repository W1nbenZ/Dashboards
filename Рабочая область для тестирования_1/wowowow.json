{
  "guid": "47e8c8fa89494b4682c663a2ee6fc1d9",
  "name": "wowowow",
  "lastEditorName": "user",
  "lastModified": "2025-05-22T09:14:58.408342Z",
  "background": {
    "type": 0,
    "imageGuid": null,
    "color": "rgba(255,255,255,0)"
  },
  "sheets": [
    {
      "guid": "547c334e4516413ba9ae440a69cdee24",
      "name": "Лист",
      "position": 0,
      "isHidden": false,
      "widgets": [
        {
          "Type": "TextWidget",
          "contentTextStyle": {
            "color": null,
            "fontSize": null,
            "fontFamily": null,
            "align": null,
            "verticalAlign": null,
            "lineHeight": null,
            "isBold": null,
            "isItalic": null
          },
          "contentText": "Введите текст...",
          "guid": "a66a8960b3004312be5def08c6948596",
          "type": "TextWidget",
          "position": {
            "x": 99,
            "y": 86
          },
          "positionLocked": false,
          "size": {
            "width": 1820,
            "height": 893
          },
          "title": {
            "enabled": false,
            "autoSize": null,
            "text": "Текст",
            "link": "",
            "linkEnabled": null,
            "background": {
              "enabled": null,
              "color": {
                "colorType": null,
                "color": null,
                "gradientColor": {
                  "colorStart": null,
                  "colorEnd": null
                }
              }
            },
            "textStyle": {
              "color": null,
              "fontSize": null,
              "fontFamily": null,
              "align": null,
              "verticalAlign": null,
              "lineHeight": null,
              "isBold": null,
              "isItalic": null
            },
            "size": {
              "width": null,
              "height": null
            }
          },
          "frame": {
            "enabled": null,
            "style": {
              "radius": null,
              "colorType": null,
              "color": null,
              "gradientColor": {
                "colorStart": null,
                "colorEnd": null
              }
            }
          },
          "background": {
            "enabled": null,
            "color": {
              "colorType": null,
              "color": null,
              "gradientColor": {
                "colorStart": null,
                "colorEnd": null
              }
            }
          },
          "boxShadow": {
            "x": null,
            "y": null,
            "blur": null,
            "spread": null,
            "color": null
          },
          "zIndex": 1,
          "allowExport": null,
          "allowSort": null,
          "multiselectEnabled": true,
          "colorPalette": null,
          "useCustomColors": false,
          "drilldownEnabled": true,
          "codeEditableEnabled": true,
          "overriddenCode": "// Получаем контейнер и задаем базовые стили\r\nconst widget = document.getElementById(w.general.renderTo);\r\nwidget.innerHTML = \"\";\r\nObject.assign(widget.style, {\r\n  position: \"relative\",\r\n  width: \"1820px\",\r\n  height: \"893px\",\r\n  fontFamily: \"Muller-Regular\",\r\n  background: \"#FFFFFF\"\r\n});\r\n\r\n// Подключаем шрифты\r\nif (!document.getElementById(\"allFonts\")) {\r\n  const style = document.createElement(\"style\");\r\n  style.id = \"allFonts\";\r\n  style.innerHTML = `\r\n    @font-face {\r\n      font-family: 'Muller-Regular';\r\n      src: url('custom/Muller-Trial-Regular.ttf');\r\n      font-weight: 400;\r\n      font-style: normal;\r\n    }\r\n    @font-face {\r\n      font-family: 'Muller-Medium';\r\n      src: url('custom/Muller-Trial-Medium.ttf');\r\n      font-weight: 500;\r\n      font-style: normal;\r\n    }\r\n  `;\r\n  document.head.appendChild(style);\r\n}\r\n\r\n// Заголовок\r\nconst title = document.createElement(\"div\");\r\ntitle.textContent = \"Договора\";\r\nObject.assign(title.style, {\r\n  position: \"absolute\",\r\n  top: \"30px\",\r\n  left: \"36.5px\",\r\n  fontSize: \"28px\",\r\n  fontFamily: \"Muller-Medium\"\r\n});\r\nwidget.appendChild(title);\r\n\r\n// SVG-иконки\r\nconst arrowSvg = `<svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.302 17.2533C11.9231 18.0077 13.0782 18.0077 13.6993 17.2533L18.376 11.5711C19.2096 10.5583 18.4892 9.03223 17.1774 9.03223H7.82388C6.51214 9.03223 5.79168 10.5583 6.62528 11.5711L11.302 17.2533Z\" fill=\"#BEBEBE\"/></svg>`;\r\nconst crossSvg = `<svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.05827 5.12587L18.2653 18.3325C18.4689 18.5367 18.5319 18.8249 18.4597 19.0843C18.4248 19.2105 18.3572 19.33 18.2577 19.4293C17.9539 19.7326 17.464 19.7326 17.1609 19.4293L13.2173 15.4859V16.3958C13.2173 16.9072 12.9674 17.3629 12.5831 17.6468C12.3248 17.8381 12.0059 17.9514 11.6618 17.9514C10.8065 17.9514 10.1062 17.2515 10.1062 16.3958V12.507L3.96224 6.22247C3.65842 5.91922 3.65842 5.42932 3.96224 5.12587C4.2653 4.82263 4.7552 4.82263 5.05827 5.12587Z\" fill=\"#00AEEF\"/><path d=\"M17.1061 5.50732C17.7517 5.50732 18.1171 6.24617 17.7206 6.75963L13.8393 11.7062L7.64062 5.50732H17.1061Z\" fill=\"#00AEEF\"/></svg>`;\r\nconst numberSvgBlack = `<svg width=\"11\" height=\"9\" viewBox=\"0 0 11 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0.139893 9.00001V0.432007H1.35189L5.25189 7.48801H5.29989C5.29189 7.28001 5.27989 7.04001 5.26389 6.76801C5.24789 6.49601 5.23589 6.22401 5.22789 5.95201C5.21989 5.67201 5.21589 5.43201 5.21589 5.23201V0.432007H6.16389V9.00001H4.98789L1.03989 1.92001H0.991893C1.00789 2.12801 1.01989 2.37601 1.02789 2.66401C1.04389 2.94401 1.05589 3.22401 1.06389 3.50401C1.07989 3.78401 1.08789 4.03201 1.08789 4.24801V9.00001H0.139893ZM7.30389 9.00001V8.17201H10.3879V9.00001H7.30389ZM8.83989 7.39201C8.49589 7.39201 8.18789 7.31601 7.91589 7.16401C7.65189 7.00401 7.44389 6.77201 7.29189 6.46801C7.13989 6.16401 7.06389 5.79201 7.06389 5.35201C7.06389 4.69601 7.22389 4.19601 7.54389 3.85201C7.87189 3.50001 8.31589 3.32401 8.87589 3.32401C9.21989 3.32401 9.52389 3.40401 9.78789 3.56401C10.0599 3.71601 10.2719 3.94401 10.4239 4.24801C10.5839 4.54401 10.6639 4.91201 10.6639 5.35201C10.6639 6.00801 10.4999 6.51201 10.1719 6.86401C9.84389 7.21601 9.39989 7.39201 8.83989 7.39201ZM8.86389 6.69601C9.21589 6.69601 9.46789 6.58401 9.61989 6.36001C9.77189 6.12801 9.84789 5.79201 9.84789 5.35201C9.84789 4.90401 9.77189 4.57601 9.61989 4.36801C9.46789 4.15201 9.21589 4.04401 8.86389 4.04401C8.51989 4.04401 8.26789 4.15201 8.10789 4.36801C7.94789 4.57601 7.86789 4.90401 7.86789 5.35201C7.86789 5.79201 7.94389 6.12801 8.09589 6.36001C8.25589 6.58401 8.51189 6.69601 8.86389 6.69601Z\" fill=\"black\"/></svg>`;\r\nconst numberSvgGray = numberSvgBlack.replace(/fill=\"black\"/, `fill=\"#BEBEBE\"`);\r\n\r\n// Функция создания кнопок\r\nfunction createButton(text, left, top, width, height, paddingX, paddingY, svg, svgLeft, svgTop, fontSize) {\r\n  const btn = document.createElement(\"div\");\r\n  Object.assign(btn.style, {\r\n    position: \"absolute\",\r\n    top: `${top}px`,\r\n    left: `${left}px`,\r\n    width: `${width}px`,\r\n    height: `${height}px`,\r\n    border: \"2px solid #F1F1F1\",\r\n    borderRadius: \"10px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    boxSizing: \"border-box\",\r\n    cursor: \"pointer\",\r\n    fontFamily: \"Muller-Regular\"\r\n  });\r\n  const span = document.createElement(\"span\");\r\n  span.textContent = text;\r\n  Object.assign(span.style, {\r\n    fontSize: `${fontSize}px`,\r\n    marginLeft: `${paddingX}px`,\r\n    lineHeight: 1\r\n  });\r\n  const svgWrap = document.createElement(\"div\");\r\n  svgWrap.innerHTML = svg;\r\n  Object.assign(svgWrap.style, {\r\n    position: \"absolute\",\r\n    left: `${svgLeft}px`,\r\n    top: `${svgTop}px`\r\n  });\r\n  btn.appendChild(span);\r\n  btn.appendChild(svgWrap);\r\n  return btn;\r\n}\r\n\r\n// Добавляем кнопки\r\nwidget.appendChild(createButton(\"Дата\",    1107, 25, 300, 51, 20, 19.5, arrowSvg, 260, 13, 14));\r\nwidget.appendChild(createButton(\"Валюта\",  1422, 25, 300, 51, 20, 19.5, arrowSvg, 260, 13, 14));\r\nwidget.appendChild(createButton(\"\",        1737, 25,  53, 51,  0,   0,     crossSvg, 15,  14,  0));\r\n\r\n// Обёртка таблицы (расширяем слева на 20px, но контент остаётся на месте)\r\nconst tableWrapper = document.createElement(\"div\");\r\nObject.assign(tableWrapper.style, {\r\n  position: \"absolute\",\r\n  top: \"132px\",\r\n  left: \"10px\",    // расширили область видимости на 20px влево\r\n  width: \"1780px\", // увеличили ширину на 20px\r\n  height: \"736px\",\r\n  overflow: \"auto\",\r\n  paddingRight: \"10px\"\r\n});\r\nwidget.appendChild(tableWrapper);\r\n\r\n// Скрываем нативный скролл\r\nconst styleScroll = document.createElement(\"style\");\r\nstyleScroll.innerHTML = `\r\n  div::-webkit-scrollbar { width: 0; height: 0; }\r\n  div { -ms-overflow-style: none; scrollbar-width: none; }\r\n`;\r\ndocument.head.appendChild(styleScroll);\r\n\r\n// Кастомный скролл-ползунок\r\nconst thumb = document.createElement(\"div\");\r\nObject.assign(thumb.style, {\r\n  position: \"absolute\",\r\n  top: \"132px\",\r\n  left: \"1800px\",\r\n  width: \"10px\",\r\n  height: \"26px\",\r\n  background: \"#E0F5FD\",\r\n  borderRadius: \"5px\"\r\n});\r\nwidget.appendChild(thumb);\r\ntableWrapper.addEventListener('scroll', () => {\r\n  const scrollTop = tableWrapper.scrollTop;\r\n  const maxScroll = tableWrapper.scrollHeight - tableWrapper.clientHeight;\r\n  const trackHeight = tableWrapper.clientHeight - 26;\r\n  thumb.style.top = `${132 + (scrollTop / maxScroll) * trackHeight}px`;\r\n});\r\n\r\n// Создание таблицы\r\nconst table = document.createElement(\"table\");\r\nObject.assign(table.style, {\r\n  width: \"100%\",\r\n  margin: \"5px 0\",     // по вертикали 5px\r\n  marginLeft: \"20px\",  // сдвигаем контент вправо на 20px обратно к исходному положению\r\n  borderCollapse: \"separate\",\r\n  borderSpacing: \"0\",\r\n  tableLayout: \"fixed\"\r\n});\r\n\r\n// Заголовки\r\nconst thead = document.createElement(\"thead\");\r\nconst headerRow = document.createElement(\"tr\");\r\nObject.assign(headerRow.style, {\r\n  position: \"sticky\",\r\n  top: \"0\",\r\n  background: \"#FFFFFF\",\r\n  zIndex: 10,\r\n  height: \"76px\"\r\n});\r\n[\r\n  { text: \"Наименование договора\", x: 30 },\r\n  { text: \"Рег. № и дата\",         x: 760 },\r\n  { text: \"Состояние\",             x: 1090 },\r\n  { text: \"Сумма\",                 x: 1490 },\r\n  { text: \"Валюта\",                x: 1690 }\r\n].forEach(h => {\r\n  const th = document.createElement(\"th\");\r\n  th.innerHTML = h.text.replace(/№/g, numberSvgGray);\r\n  Object.assign(th.style, {\r\n    position: \"absolute\",\r\n    left: `${h.x}px`,\r\n    padding: \"14px 0\",\r\n    fontFamily: \"Muller-Regular\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    color: \"#BEBEBE\"\r\n  });\r\n  headerRow.appendChild(th);\r\n});\r\nthead.appendChild(headerRow);\r\ntable.appendChild(thead);\r\n\r\n// Тело таблицы\r\nconst tbody = document.createElement(\"tbody\");\r\nfor (let i = 1; i <= 30; i++) {\r\n  const tr = document.createElement(\"tr\");\r\n  Object.assign(tr.style, {\r\n    display: \"block\",       // чтобы border-radius работал\r\n    width: \"100%\",\r\n    height: \"76px\",\r\n    background: \"#FFFFFF\",\r\n    position: \"relative\",\r\n    borderRadius: \"8px\",    // скругляем каждую строку 8px\r\n    overflow: \"visible\",    // чтобы индикатор не обрезался\r\n    marginBottom: \"4px\"\r\n  });\r\n\r\n  tr.addEventListener(\"mouseenter\", () => {\r\n    tr.style.background = \"#00AEEF33\";\r\n    const indicator = document.createElement(\"div\");\r\n    Object.assign(indicator.style, {\r\n      position: \"absolute\",\r\n      left: \"-15px\",      // палочка сдвинута на -15px\r\n      top: \"0\",\r\n      width: \"10px\",\r\n      height: \"76px\",\r\n      background: \"#00AEEF\",\r\n      borderRadius: \"8px\"\r\n    });\r\n    indicator.classList.add(\"hover-indicator\");\r\n    tr.appendChild(indicator);\r\n  });\r\n\r\n  tr.addEventListener(\"mouseleave\", () => {\r\n    tr.style.background = \"#FFFFFF\";\r\n    const ind = tr.querySelector(\".hover-indicator\");\r\n    if (ind) tr.removeChild(ind);\r\n  });\r\n\r\n  const cells = [\r\n    { html: `Сумма: ${(i * 500000).toLocaleString()} CNY. Комплектующие ${numberSvgBlack}${i}`, x: 30 },\r\n    { text: `МОРГАН-${100 + i}/25 от 2025-03-${String(i).padStart(2, '0')}`, x: 760 },\r\n    { text: i % 3 === 0 ? \"Исполнен\" : \"Согласован, На исполнении\", x: 1090 },\r\n    { text: (Math.random() * 1e6).toFixed(2), x: 1490 },\r\n    { text: i % 2 === 0 ? \"RUB\" : \"CNY\", x: 1690 }\r\n  ];\r\n  cells.forEach(c => {\r\n    const td = document.createElement(\"td\");\r\n    if (c.html) td.innerHTML = c.html;\r\n    else td.textContent = c.text;\r\n    Object.assign(td.style, {\r\n      position: \"absolute\",\r\n      left: `${c.x}px`,\r\n      padding: \"11px 0\",\r\n      fontFamily: \"Muller-Regular\",\r\n      fontSize: \"16px\"\r\n    });\r\n    tr.appendChild(td);\r\n  });\r\n\r\n  tbody.appendChild(tr);\r\n}\r\ntable.appendChild(tbody);\r\ntableWrapper.appendChild(table);\r\n",
          "dataSettings": {
            "columns": []
          },
          "widgetsExcludedFromImpact": [],
          "dataFilter": {
            "values": [],
            "columns": [],
            "type": 0,
            "from": null,
            "to": null,
            "useExcluding": false
          },
          "filters": [],
          "dataSort": {
            "columns": []
          },
          "dataRoles": [
            {
              "name": "Columns",
              "displayName": "Столбцы",
              "description": "",
              "kind": 2,
              "optional": false
            }
          ],
          "dataQuery": null,
          "numberFormat": {
            "precision": null,
            "useGrouping": null,
            "groupSeparator": null
          },
          "hasFilterInByNullValue": false
        }
      ],
      "size": {
        "width": 1920,
        "height": 1080
      },
      "fit": 0,
      "color": "rgba(255,255,255,1)"
    }
  ],
  "grantedPublicAccess": false,
  "grid": {
    "enabled": false
  },
  "iconVisibilitySettings": {
    "impact": true
  },
  "dataset": {
    "workspaceId": "962c291b-2e11-4b24-b980-e13d0376a4db",
    "datasetId": "d7f832c5-b894-43f6-b3d4-21163c29491a"
  },
  "workspaceId": "962c291b-2e11-4b24-b980-e13d0376a4db",
  "themeGuid": "6a21f8f3fb9744d1832c3be41ab61645",
  "isPublic": false
}